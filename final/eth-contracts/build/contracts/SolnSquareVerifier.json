{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isValidAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "squareVerifier",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "NewTokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pauser",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "unpauser",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "Id",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "Id",
          "type": "uint256"
        },
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[1]"
        }
      ],
      "name": "mintTokens",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isValidAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Id\",\"type\":\"uint256\"},{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[1]\"}],\"name\":\"mintTokens\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"squareVerifier\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Id\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"NewTokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"unpauser\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\\r\",\"params\":{\"operator\":\"operator address which you want to query the approval of\\r\",\"owner\":\"owner address which you want to query the approval of\\r\"},\"return\":\"bool whether the given operator is approved by the given owner\\r\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator\\r An operator is allowed to transfer all tokens of the sender on their behalf\\r\",\"params\":{\"approved\":\"representing the status of the approval to be set\\r\",\"to\":\"operator address to set the approval\\r\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\\r\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract\\r Reverts if the index is greater or equal to the total number of tokens\\r\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\\r\"},\"return\":\"uint256 token ID at the given index of the tokens list\\r\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\\r\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\\r\",\"owner\":\"address owning the tokens list to be accessed\\r\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\\r\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\\r\",\"return\":\"uint256 representing the total amount of tokens\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x14afac371ee8809eeef48c9c4689254a9faa4cea3488308aab5bb1cff5e39ba6\",\"urls\":[\"bzzr://8f9f39d6b4104d5779dbd9c25b72b0c59ab5e3bf42eb5b32129b443a0cbbc1da\"]},\"/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xc38194ed2d1a36907876f5836db0fd286125a56df657a2a28a3a5967b7d2b2a0\",\"urls\":[\"bzzr://80c5d5ebe0b16d0230061758ed8ae5141e2f3dd14cbe7175b4722a702ea7fdd7\"]},\"/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x2e062ce92a7d2169592bdaa84d01546d7c13b31a3f435d780cf3f81973d193a9\",\"urls\":[\"bzzr://bbfe6ecb21cce630e68d9e8257b20922a71eda42e5d563c8674a595a47de2bf2\"]},\"/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/verifier.sol\":{\"keccak256\":\"0xfb32b47d89473474ebaccb6e96c9d6781fb9c4950d9e5f3a2a835abd9cbd3dd2\",\"urls\":[\"bzzr://19bf193c6b27ee12cf0414644a0891801ba9dd0d0979247029c5288c83b492b6\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a85760003560e01c806340c10f19116100f9578063a22cb46511610097578063c87b56dd11610071578063c87b56dd146104f1578063ccd0ef6914610521578063e985e9c51461053d578063f2fde38b1461056d576101a8565b8063a22cb4651461049b578063b88d4fde146104b7578063bdc32be0146104d3576101a8565b80634c1b1c93116100d35780634c1b1c93146103ed5780634f6ccce71461040b5780636352211e1461043b57806370a082311461046b576101a8565b806340c10f191461038357806342842e0e146103b3578063442890d5146103cf576101a8565b806317d7de7c1161016657806327dc297e1161014057806327dc297e146102eb57806328c155b6146103075780632f745c591461033757806338bbfa5014610367576101a8565b806317d7de7c1461029357806318160ddd146102b157806323b872dd146102cf576101a8565b80623f07fa146101ad57806301ffc9a7146101dd578063081812fc1461020d578063095ea7b31461023d578063150704011461025957806316c38b3c14610277575b600080fd5b6101c760048036036101c29190810190612ac7565b610589565b6040516101d491906136e3565b60405180910390f35b6101f760048036036101f29190810190612d93565b6105c2565b60405161020491906136e3565b60405180910390f35b61022760048036036102229190810190612de5565b61062a565b6040516102349190613635565b60405180910390f35b61025760048036036102529190810190612c32565b61067b565b005b610261610801565b60405161026e9190613719565b60405180910390f35b610291600480360361028c9190810190612c6e565b6108a3565b005b61029b6109a5565b6040516102a89190613719565b60405180910390f35b6102b9610a47565b6040516102c691906138db565b60405180910390f35b6102e960048036036102e49190810190612b2c565b610a54565b005b61030560048036036103009190810190612cc0565b610a8c565b005b610321600480360361031c9190810190612e4a565b610acf565b60405161032e91906136e3565b60405180910390f35b610351600480360361034c9190810190612c32565b610c27565b60405161035e91906138db565b60405180910390f35b610381600480360361037c9190810190612d14565b610c9a565b005b61039d60048036036103989190810190612c32565b610c9f565b6040516103aa91906136e3565b60405180910390f35b6103cd60048036036103c89190810190612b2c565b610daa565b005b6103d7610ddf565b6040516103e49190613635565b60405180910390f35b6103f5610e08565b60405161040291906136fe565b60405180910390f35b61042560048036036104209190810190612de5565b610e2e565b60405161043291906138db565b60405180910390f35b61045560048036036104509190810190612de5565b610e62565b6040516104629190613635565b60405180910390f35b61048560048036036104809190810190612ac7565b610eb3565b60405161049291906138db565b60405180910390f35b6104b560048036036104b09190810190612bf6565b610f13565b005b6104d160048036036104cc9190810190612b7b565b61105e565b005b6104db611099565b6040516104e89190613719565b60405180910390f35b61050b60048036036105069190810190612de5565b61113b565b6040516105189190613719565b60405180910390f35b61053b60048036036105369190810190612e0e565b611202565b005b61055760048036036105529190810190612af0565b6113f2565b60405161056491906136e3565b60405180910390f35b61058760048036036105829190810190612ac7565b61149a565b005b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60008060149054906101000a900460ff16610676576003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b600060149054906101000a900460ff166107fd5761069881610e62565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd9061383b565b60405180910390fd5b61071033826115eb565b61074f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107469061379b565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b5050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108995780601f1061086e57610100808354040283529160200191610899565b820191906000526020600020905b81548152906001019060200180831161087c57829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610932576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109299061375b565b60405180910390fd5b600060149054906101000a900460ff1615158115151415610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f906137db565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a3d5780601f10610a1257610100808354040283529160200191610a3d565b820191906000526020600020905b815481529060010190602001808311610a2057829003601f168201915b5050505050905090565b6000600880549050905090565b600060149054906101000a900460ff16610a8757610a7233826115eb565b610a7b57600080fd5b610a86838383611695565b5b505050565b610acb828260006040519080825280601f01601f191660200182016040528015610ac55781602001600182028038833980820191505090505b50610c9a565b5050565b6000601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd129313868686866040518563ffffffff1660e01b8152600401610b32949392919061369c565b60206040518083038186803b158015610b4a57600080fd5b505afa158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b829190810190612c97565b610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb89061387b565b60405180910390fd5b610bcb8633611202565b610bd53387610c9f565b90506001151581151514610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c159061377b565b60405180910390fd5b95945050505050565b6000610c3283610eb3565b8210610c3d57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c8757fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d279061375b565b60405180910390fd5b610d3a83836116b9565b6060610d45836116da565b905080604051610d55919061361e565b60405180910390208473ffffffffffffffffffffffffffffffffffffffff167ee705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d21260405160405180910390a3600191505092915050565b600060149054906101000a900460ff16610dda57610dd98383836040518060200160405280600081525061105e565b5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e38610a47565b8210610e4357600080fd5b60088281548110610e5057fe5b90600052602060002001549050919050565b60008060149054906101000a900460ff16610eae576002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b60008060149054906101000a900460ff16610f0e57600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490505b919050565b600060149054906101000a900460ff1661105a573373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f6057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161105191906136e3565b60405180910390a35b5050565b600060149054906101000a900460ff166110935761107d848484610a54565b6110898484848461180b565b61109257600080fd5b5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111315780601f1061110657610100808354040283529160200191611131565b820191906000526020600020905b81548152906001019060200180831161111457829003601f168201915b5050505050905090565b606061114682611936565b61114f57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f65780601f106111cb576101008083540402835291602001916111f6565b820191906000526020600020905b8154815290600101906020018083116111d957829003601f168201915b50505050509050919050565b61120a6126b9565b60136000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16151515158152505090508060400151156112ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e1906137fb565b60405180910390fd5b60405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090508060136000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d816000015182602001516040516113e59291906138f6565b60405180910390a1505050565b60008060149054906101000a900460ff1661149457600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611529576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115209061375b565b60405180910390fd5b61153281610589565b611571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115689061373b565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163816040516115e09190613635565b60405180910390a150565b60008060149054906101000a900460ff1661168f57600061160b83610e62565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061167a57508373ffffffffffffffffffffffffffffffffffffffff166116628461062a565b73ffffffffffffffffffffffffffffffffffffffff16145b8061168b575061168a81856113f2565b5b9150505b92915050565b6116a08383836119bd565b6116aa8382611bac565b6116b48282611d4a565b505050565b6116c38282611e11565b6116cd8282611d4a565b6116d68161203e565b5050565b60606116e582611936565b611724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171b9061385b565b60405180910390fd5b606061172f8361208a565b905060606117d760118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117cc5780601f106117a1576101008083540402835291602001916117cc565b820191906000526020600020905b8154815290600101906020018083116117af57829003601f168201915b5050505050836121b7565b9050806012600086815260200190815260200160002090805190602001906118009291906126f2565b508092505050919050565b60008060149054906101000a900460ff1661192e5761183f8473ffffffffffffffffffffffffffffffffffffffff166121fb565b61184c576001905061192d565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161188d9493929190613650565b602060405180830381600087803b1580156118a757600080fd5b505af11580156118bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118df9190810190612dbc565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b5b949350505050565b60008060149054906101000a900460ff166119b85760006002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614159150505b919050565b600060149054906101000a900460ff16611ba7576119db83826115eb565b611a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a11906137bb565b60405180910390fd5b611a2382610589565b611a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a59906138bb565b60405180910390fd5b611a6b81612246565b611ab2600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612319565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b4b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061233c565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050565b6000611c046001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061235290919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611cf1576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c7157fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611cc957fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d439190612772565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600060149054906101000a900460ff1661203a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eab9061375b565b60405180910390fd5b611ebd81611936565b15611efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef49061381b565b60405180910390fd5b611f0682610589565b611f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3c9061389b565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fde600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061233c565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156120d2576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506121b2565b600082905060005b600082146120fc578080600101915050600a82816120f457fe5b0491506120da565b6060816040519080825280601f01601f1916602001820160405280156121315781602001600182028038833980820191505090505b50905060006001830390505b600086146121aa57600a868161214f57fe5b0660300160f81b8282806001900393508151811061216957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816121a257fe5b04955061213d565b819450505050505b919050565b60606121f3838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061239c565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561223d57506000801b8214155b92505050919050565b600060149054906101000a900460ff1661231657600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123155760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b6123316001826000015461235290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061239483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061265e565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123f85781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561247d5788818151811061242457fe5b602001015160f81c60f81b83838060010194508151811061244157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061240f565b600090505b87518110156124f05787818151811061249757fe5b602001015160f81c60f81b8383806001019450815181106124b457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612482565b600090505b86518110156125635786818151811061250a57fe5b602001015160f81c60f81b83838060010194508151811061252757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124f5565b600090505b85518110156125d65785818151811061257d57fe5b602001015160f81c60f81b83838060010194508151811061259a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612568565b600090505b8451811015612649578481815181106125f057fe5b602001015160f81c60f81b83838060010194508151811061260d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125db565b82995050505050505050505095945050505050565b60008383111582906126a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269d9190613719565b60405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061273357805160ff1916838001178555612761565b82800160010185558215612761579182015b82811115612760578251825591602001919060010190612745565b5b50905061276e919061279e565b5090565b81548183558181111561279957818360005260206000209182019101612798919061279e565b5b505050565b6127c091905b808211156127bc5760008160009055506001016127a4565b5090565b90565b60006127cf8235613b6b565b905092915050565b600082601f8301126127e857600080fd5b60026127fb6127f68261394c565b61391f565b9150818385604084028201111561281157600080fd5b60005b83811015612841578161282788826128bf565b845260208401935060408301925050600181019050612814565b5050505092915050565b600082601f83011261285c57600080fd5b600161286f61286a8261396e565b61391f565b9150818385602084028201111561288557600080fd5b60005b838110156128b5578161289b8882612ab3565b845260208401935060208301925050600181019050612888565b5050505092915050565b600082601f8301126128d057600080fd5b60026128e36128de82613990565b61391f565b915081838560208402820111156128f957600080fd5b60005b83811015612929578161290f8882612ab3565b8452602084019350602083019250506001810190506128fc565b5050505092915050565b600082601f83011261294457600080fd5b6002612957612952826139b2565b61391f565b9150818385602084028201111561296d57600080fd5b60005b8381101561299d57816129838882612ab3565b845260208401935060208301925050600181019050612970565b5050505092915050565b60006129b38235613b7d565b905092915050565b60006129c78251613b7d565b905092915050565b60006129db8235613b89565b905092915050565b60006129ef8235613b93565b905092915050565b6000612a038251613b93565b905092915050565b600082601f830112612a1c57600080fd5b8135612a2f612a2a826139d4565b61391f565b91508082526020830160208301858383011115612a4b57600080fd5b612a56838284613c43565b50505092915050565b600082601f830112612a7057600080fd5b8135612a83612a7e82613a00565b61391f565b91508082526020830160208301858383011115612a9f57600080fd5b612aaa838284613c43565b50505092915050565b6000612abf8235613bdf565b905092915050565b600060208284031215612ad957600080fd5b6000612ae7848285016127c3565b91505092915050565b60008060408385031215612b0357600080fd5b6000612b11858286016127c3565b9250506020612b22858286016127c3565b9150509250929050565b600080600060608486031215612b4157600080fd5b6000612b4f868287016127c3565b9350506020612b60868287016127c3565b9250506040612b7186828701612ab3565b9150509250925092565b60008060008060808587031215612b9157600080fd5b6000612b9f878288016127c3565b9450506020612bb0878288016127c3565b9350506040612bc187828801612ab3565b925050606085013567ffffffffffffffff811115612bde57600080fd5b612bea87828801612a0b565b91505092959194509250565b60008060408385031215612c0957600080fd5b6000612c17858286016127c3565b9250506020612c28858286016129a7565b9150509250929050565b60008060408385031215612c4557600080fd5b6000612c53858286016127c3565b9250506020612c6485828601612ab3565b9150509250929050565b600060208284031215612c8057600080fd5b6000612c8e848285016129a7565b91505092915050565b600060208284031215612ca957600080fd5b6000612cb7848285016129bb565b91505092915050565b60008060408385031215612cd357600080fd5b6000612ce1858286016129cf565b925050602083013567ffffffffffffffff811115612cfe57600080fd5b612d0a85828601612a5f565b9150509250929050565b600080600060608486031215612d2957600080fd5b6000612d37868287016129cf565b935050602084013567ffffffffffffffff811115612d5457600080fd5b612d6086828701612a5f565b925050604084013567ffffffffffffffff811115612d7d57600080fd5b612d8986828701612a0b565b9150509250925092565b600060208284031215612da557600080fd5b6000612db3848285016129e3565b91505092915050565b600060208284031215612dce57600080fd5b6000612ddc848285016129f7565b91505092915050565b600060208284031215612df757600080fd5b6000612e0584828501612ab3565b91505092915050565b60008060408385031215612e2157600080fd5b6000612e2f85828601612ab3565b9250506020612e40858286016127c3565b9150509250929050565b60008060008060006101408688031215612e6357600080fd5b6000612e7188828901612ab3565b9550506020612e8288828901612933565b9450506060612e93888289016127d7565b93505060e0612ea488828901612933565b925050610120612eb68882890161284b565b9150509295509295909350565b6000612ecf838361300a565b60408301905092915050565b6000612ee78383613600565b60208301905092915050565b612efc81613be9565b82525050565b612f0b81613b23565b82525050565b612f1a81613a54565b612f248184613aca565b9250612f2f82613a2c565b60005b82811015612f5d57612f45858351612ec3565b9450612f5082613a96565b9150600181019050612f32565b5050505050565b612f6d81613a5f565b612f778184613ad5565b9250612f8282613a36565b60005b82811015612fb057612f98858351612edb565b9450612fa382613aa3565b9150600181019050612f85565b5050505050565b612fc081613a75565b612fca8184613aeb565b9250612fd582613a4a565b60005b8281101561300357612feb858351612edb565b9450612ff682613abd565b9150600181019050612fd8565b5050505050565b61301381613a6a565b61301d8184613ae0565b925061302882613a40565b60005b828110156130565761303e858351612edb565b945061304982613ab0565b915060018101905061302b565b5050505050565b61306681613b35565b82525050565b600061307782613a80565b6130818185613af6565b9350613091818560208601613c52565b61309a81613c85565b840191505092915050565b6130ae81613bfb565b82525050565b60006130bf82613a8b565b6130c98185613b07565b93506130d9818560208601613c52565b6130e281613c85565b840191505092915050565b60006130f882613a8b565b6131028185613b18565b9350613112818560208601613c52565b80840191505092915050565b600061312b602983613b07565b91507f4e6577206f776e6572206973206e6f7420612076616c6964204574686572657560008301527f6d206164647265737300000000000000000000000000000000000000000000006020830152604082019050919050565b6000613191602183613b07565b91507f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008301527f6e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006131f7601783613b07565b91507f436f756c646e2774206d696e742074686520746f6b656e0000000000000000006000830152602082019050919050565b6000613237603783613b07565b91507f4d73672073656e6465722073686f756c64206265206f776e6572206f6620746f60008301527f6b656e206f7220617070726f76656420666f7220616c6c0000000000000000006020830152604082019050919050565b600061329d603583613b07565b91507f4f6e6c79206f776e6572206f6620746f6b656e2c206f7220617070726f76656460008301527f20616464726573732063616e207472616e7366657200000000000000000000006020830152604082019050919050565b6000613303602983613b07565b91507f436f6e74726163742070617573656420616c72656164792073657420746f207460008301527f6869732076616c756500000000000000000000000000000000000000000000006020830152604082019050919050565b6000613369601783613b07565b91507f536f6c7574696f6e206973206e6f7420756e697175652e0000000000000000006000830152602082019050919050565b60006133a9602483613b07565b91507f43616e6f74206d696e74202d20546f6b656e20494420616c726561647920657860008301527f69737473000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061340f602183613b07565b91507f54686973206164647265737320697320616c726561647920746865206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613475603683613b07565b91507f43616e6e6f742067656e657261746520612055524920666f72206120746f6b6560008301527f6e207468617420646f6573206e6f7420657873697374000000000000000000006020830152604082019050919050565b60006134db602c83613b07565b91507f43616e6e6f74206d696e742061206e657720746f6b656e2d205665726966696360008301527f6174696f6e206661696c656400000000000000000000000000000000000000006020830152604082019050919050565b6000613541602d83613b07565b91507f43616e6e6f74206d696e74202d20476976656e2027746f27206164647265737360008301527f206973206e6f742076616c6964000000000000000000000000000000000000006020830152604082019050919050565b60006135a7602e83613b07565b91507f546f6b656e20726563657069656e742061646472657373206973206e6f74206160008301527f2076616c696420616464726573730000000000000000000000000000000000006020830152604082019050919050565b61360981613b61565b82525050565b61361881613b61565b82525050565b600061362a82846130ed565b915081905092915050565b600060208201905061364a6000830184612f02565b92915050565b60006080820190506136656000830187612ef3565b6136726020830186612f02565b61367f604083018561360f565b8181036060830152613691818461306c565b905095945050505050565b6000610120820190506136b26000830187612fb7565b6136bf6040830186612f11565b6136cc60c0830185612fb7565b6136da610100830184612f64565b95945050505050565b60006020820190506136f8600083018461305d565b92915050565b600060208201905061371360008301846130a5565b92915050565b6000602082019050818103600083015261373381846130b4565b905092915050565b600060208201905081810360008301526137548161311e565b9050919050565b6000602082019050818103600083015261377481613184565b9050919050565b60006020820190508181036000830152613794816131ea565b9050919050565b600060208201905081810360008301526137b48161322a565b9050919050565b600060208201905081810360008301526137d481613290565b9050919050565b600060208201905081810360008301526137f4816132f6565b9050919050565b600060208201905081810360008301526138148161335c565b9050919050565b600060208201905081810360008301526138348161339c565b9050919050565b6000602082019050818103600083015261385481613402565b9050919050565b6000602082019050818103600083015261387481613468565b9050919050565b60006020820190508181036000830152613894816134ce565b9050919050565b600060208201905081810360008301526138b481613534565b9050919050565b600060208201905081810360008301526138d48161359a565b9050919050565b60006020820190506138f0600083018461360f565b92915050565b600060408201905061390b600083018561360f565b6139186020830184612f02565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561394257600080fd5b8060405250919050565b600067ffffffffffffffff82111561396357600080fd5b602082029050919050565b600067ffffffffffffffff82111561398557600080fd5b602082029050919050565b600067ffffffffffffffff8211156139a757600080fd5b602082029050919050565b600067ffffffffffffffff8211156139c957600080fd5b602082029050919050565b600067ffffffffffffffff8211156139eb57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613a1757600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060019050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613b2e82613b41565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613b7682613bbf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613bf482613c1f565b9050919050565b6000613c0682613c0d565b9050919050565b6000613c1882613b41565b9050919050565b6000613c2a82613c31565b9050919050565b6000613c3c82613b41565b9050919050565b82818337600083830152505050565b60005b83811015613c70578082015181840152602081019050613c55565b83811115613c7f576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a7230582089bfc73dd9740ec27f56ee49c4232bacb280d8987ae4aeb2bbb62972c333491e6c6578706572696d656e74616cf50037",
  "sourceMap": "388:1974:3:-;;;1113:98;8:9:-1;5:2;;;30:1;27;20:12;5:2;1113:98:3;;;;;;;;;;;;;;;;;;;;;;21070:291:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:10;610:6;;:19;;;;;;;;;;;;;;;;;;2632:5;2622:7;;:15;;;;;;;;;;;;;;;;;;3320:40;2894:10;3339:20;;3320:18;;;:40;;:::i;:::-;5517;5387:10;5536:20;;5517:18;;;:40;;:::i;:::-;13610:51;13203:10;13629:31;;13610:18;;;:51;;:::i;:::-;21221:4;21213:5;:12;;;;;;;;;;;;:::i;:::-;;21246:6;21236:7;:16;;;;;;;;;;;;:::i;:::-;;21279:12;21263:13;:28;;;;;;;;;;;;:::i;:::-;;21304:49;20872:10;21323:29;;21304:18;;;:49;;:::i;:::-;21070:291;;;23661:51;23197:10;23680:31;;23661:18;;;:51;;:::i;:::-;1191:15:3;1165:14;;:42;;;;;;;;;;;;;;;;;;1113:98;388:1974;;3684:161:0;3775:10;3760:25;;:11;:25;;;;;3752:34;;;;;;3833:4;3797:20;:33;3818:11;3797:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3684:161;:::o;388:1974:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:105;;473:31;498:5;473:31;;;462:42;;456:53;;;;516:128;;596:42;589:5;585:54;574:65;;568:76;;;;388:1974:3;;;;;;;",
  "deployedSourceMap": "388:1974:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;388:1974:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1641:151:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3464:136;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6792:184;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6142:642;;;;;;;;;;;;;;;;:::i;:::-;;21582:129;;;:::i;:::-;;;;;;;;;;;;;;;;2653:165;;;;;;;;;;;;;;;;:::i;:::-;;21451:125;;;:::i;:::-;;;;;;;;;;;;;;;;14393:96;;;:::i;:::-;;;;;;;;;;;;;;;;8005:198;;;;;;;;;;;;;;;;:::i;:::-;;15167:124:2;;;;;;;;;;;;;;;;:::i;:::-;;1938:419:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14050:185:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15299:169:2;;;;;;;;;;;;;;;;:::i;:::-;;24325:240:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8211:148;;;;;;;;;;;;;;;;:::i;:::-;;1470:88;;;:::i;:::-;;;;;;;;;;;;;;;;906:30:3;;;:::i;:::-;;;;;;;;;;;;;;;;14834:151:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5883:179;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5573:302;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7276:231;;;;;;;;;;;;;;;;:::i;:::-;;8367:228;;;;;;;;;;;;;;;;:::i;:::-;;21717:141;;;:::i;:::-;;;;;;;;;;;;;;;;21866:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1297:315:3;;;;;;;;;;;;;;;;:::i;:::-;;7836:161:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1086:376;;;;;;;;;;;;;;;;:::i;:::-;;1641:151;1704:4;1749:1;1729:22;;:8;:22;;;;1722:29;;1641:151;;;:::o;3464:136::-;3535:4;3559:20;:33;3580:11;3559:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3552:40;;3464:136;;;:::o;6792:184::-;6865:7;2422;;;;;;;;;;;2417:15;;6944;:24;6960:7;6944:24;;;;;;;;;;;;;;;;;;;;;6937:31;;2417:15;6792:184;;;:::o;6142:642::-;2422:7;;;;;;;;;;;2417:15;;6312:16;6320:7;6312;:16::i;:::-;6306:22;;:2;:22;;;;6298:68;;;;;;;;;;;;;;;;;;;;;;6492:39;6511:10;6523:7;6492:18;:39::i;:::-;6484:107;;;;;;;;;;;;;;;;;;;;;;6684:2;6657:15;:24;6673:7;6657:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6766:7;6762:2;6741:33;;6750:10;6741:33;;;;;;;;;;;;2417:15;6142:642;;:::o;21582:129::-;21626:13;21696:7;21689:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21582:129;:::o;2653:165::-;799:6;;;;;;;;;;;785:20;;:10;:20;;;777:66;;;;;;;;;;;;;;;;;;;;;;2730:7;;;;;;;;;;;2720:17;;:6;:17;;;;2712:71;;;;;;;;;;;;;;;;;;;;;;2804:6;2794:7;;:16;;;;;;;;;;;;;;;;;;2653:165;:::o;21451:125::-;21493:13;21563:5;21556:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21451:125;:::o;14393:96::-;14437:7;14464:10;:17;;;;14457:24;;14393:96;:::o;8005:198::-;2422:7;;;;;;;;;;;2417:15;;8110:39;8129:10;8141:7;8110:18;:39::i;:::-;8102:48;;;;;;8163:32;8177:4;8183:2;8187:7;8163:13;:32::i;:::-;2417:15;8005:198;;;:::o;15167:124:2:-;15243:40;15254:5;15261:7;15280:1;15270:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15270:12:2;;;;15243:10;:40::i;:::-;15167:124;;:::o;1938:419:3:-;2109:11;2138:14;;;;;;;;;;;:23;;;2162:1;2165;2168;2171:5;2138:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2138:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2138:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2138:39:3;;;;;;;;;2130:96;;;;;;;;;;;;;;;;;;;;;;2233:27;2245:2;2249:10;2233:11;:27::i;:::-;2276:20;2281:10;2293:2;2276:4;:20::i;:::-;2267:29;;2321:4;2311:14;;:6;:14;;;2303:50;;;;;;;;;;;;;;;;;;;;;;1938:419;;;;;;;:::o;14050:185:0:-;14130:7;14166:16;14176:5;14166:9;:16::i;:::-;14158:5;:24;14150:33;;;;;;14201:12;:19;14214:5;14201:19;;;;;;;;;;;;;;;14221:5;14201:26;;;;;;;;;;;;;;;;14194:33;;14050:185;;;;:::o;15299:169:2:-;;;;:::o;24325:240:0:-;24394:4;799:6;;;;;;;;;;;785:20;;:10;:20;;;777:66;;;;;;;;;;;;;;;;;;;;;;24410:24;24422:2;24426:7;24410:11;:24::i;:::-;24445:17;24465:27;24484:7;24465:18;:27::i;:::-;24445:47;;24529:3;24510:23;;;;;;;;;;;;;;;24525:2;24510:23;;;;;;;;;;;;24553:4;24546:11;;;24325:240;;;;:::o;8211:148::-;2422:7;;;;;;;;;;;2417:15;;8312:39;8329:4;8335:2;8339:7;8312:39;;;;;;;;;;;;:16;:39::i;:::-;2417:15;8211:148;;;:::o;1470:88::-;1518:7;1544:6;;;;;;;;;;;1537:13;;1470:88;:::o;906:30:3:-;;;;;;;;;;;;;:::o;14834:151:0:-;14892:7;14928:13;:11;:13::i;:::-;14920:5;:21;14912:30;;;;;;14960:10;14971:5;14960:17;;;;;;;;;;;;;;;;14953:24;;14834:151;;;:::o;5883:179::-;5952:7;2422;;;;;;;;;;;2417:15;;6034:11;:20;6046:7;6034:20;;;;;;;;;;;;;;;;;;;;;6027:27;;2417:15;5883:179;;;:::o;5573:302::-;5642:7;2422;;;;;;;;;;;2417:15;;5836:17;:24;5854:5;5836:24;;;;;;;;;;;;;;;:31;;;5829:38;;2417:15;5573:302;;;:::o;7276:231::-;2422:7;;;;;;;;;;;2417:15;;7376:10;7370:16;;:2;:16;;;;7362:25;;;;;;7435:8;7398:18;:30;7417:10;7398:30;;;;;;;;;;;;;;;:34;7429:2;7398:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7486:2;7459:40;;7474:10;7459:40;;;7490:8;7459:40;;;;;;;;;;;;;;;2417:15;7276:231;;:::o;8367:228::-;2422:7;;;;;;;;;;;2417:15;;8488:31;8501:4;8507:2;8511:7;8488:12;:31::i;:::-;8538:48;8561:4;8567:2;8571:7;8580:5;8538:22;:48::i;:::-;8530:57;;;;;;2417:15;8367:228;;;;:::o;21717:141::-;21767:13;21837;21830:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21717:141;:::o;21866:162::-;21924:13;21958:16;21966:7;21958;:16::i;:::-;21950:25;;;;;;21993:10;:27;22011:7;21993:27;;;;;;;;;;;21986:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21866:162;;;:::o;1297:315:3:-;1383:19;;:::i;:::-;1405:15;:19;1421:2;1405:19;;;;;;;;;;;1383:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:3;:11;;;1439:12;1431:48;;;;;;;;;;;;;;;;;;;;;;1492:25;;;;;;;;1501:2;1492:25;;;;1505:5;1492:25;;;;;;1512:4;1492:25;;;;;1486:31;;1554:3;1524:15;:27;1540:3;:10;;;1524:27;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1569:39;1583:3;:10;;;1595:3;:12;;;1569:39;;;;;;;;;;;;;;;;1297:315;;;:::o;7836:161:0:-;7930:4;2422:7;;;;;;;;;;;2417:15;;7954:18;:25;7973:5;7954:25;;;;;;;;;;;;;;;:35;7980:8;7954:35;;;;;;;;;;;;;;;;;;;;;;;;;7947:42;;2417:15;7836:161;;;;:::o;1086:376::-;799:6;;;;;;;;;;;785:20;;:10;:20;;;777:66;;;;;;;;;;;;;;;;;;;;;;1308:24;1323:8;1308:14;:24::i;:::-;1300:78;;;;;;;;;;;;;;;;;;;;;;1398:8;1389:6;;:17;;;;;;;;;;;;;;;;;;1422:30;1443:8;1422:30;;;;;;;;;;;;;;;1086:376;:::o;9336:263::-;9435:4;2422:7;;;;;;;;;;;2417:15;;9452:13;9468:16;9476:7;9468;:16::i;:::-;9452:32;;9514:5;9503:16;;:7;:16;;;:51;;;;9547:7;9523:31;;:20;9535:7;9523:11;:20::i;:::-;:31;;;9503:51;:87;;;;9558:32;9575:5;9582:7;9558:16;:32::i;:::-;9503:87;9495:96;;;2417:15;9336:263;;;;:::o;15369:245::-;15455:38;15475:4;15481:2;15485:7;15455:19;:38::i;:::-;15506:47;15539:4;15545:7;15506:32;:47::i;:::-;15566:40;15594:2;15598:7;15566:27;:40::i;:::-;15369:245;;;:::o;15877:202::-;15941:24;15953:2;15957:7;15941:11;:24::i;:::-;15978:40;16006:2;16010:7;15978:27;:40::i;:::-;16031;16063:7;16031:31;:40::i;:::-;15877:202;;:::o;22123:809::-;22180:13;22631:16;22639:7;22631;:16::i;:::-;22623:83;;;;;;;;;;;;;;;;;;;;;;22719:24;22746:17;22755:7;22746:8;:17::i;:::-;22719:44;;22774:25;22803:36;22813:13;22803:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22828:10;22803:9;:36::i;:::-;22774:65;;22880:11;22850:10;:27;22868:7;22850:27;;;;;;;;;;;:41;;;;;;;;;;;;:::i;:::-;;22911:11;22904:18;;;;22123:809;;;:::o;11988:370::-;12124:4;2422:7;;;;;;;;;;;2417:15;;12151;:2;:13;;;:15::i;:::-;12146:60;;12190:4;12183:11;;;;12146:60;12218:13;12250:2;12234:36;;;12271:10;12283:4;12289:7;12298:5;12234:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12234:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12234:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12234:70:0;;;;;;;;;12218:86;;4503:10;12333:16;;12323:26;;;:6;:26;;;;12315:35;;;2431:1;2417:15;11988:370;;;;;;:::o;8796:171::-;8867:4;2422:7;;;;;;;;;;;2417:15;;8884:13;8900:11;:20;8912:7;8900:20;;;;;;;;;;;;;;;;;;;;;8884:36;;8956:1;8939:19;;:5;:19;;;;8931:28;;;2417:15;8796:171;;;:::o;10647:802::-;2422:7;;;;;;;;;;;2417:15;;10828:33;10847:4;10853:7;10828:18;:33::i;:::-;10820:99;;;;;;;;;;;;;;;;;;;;;;11009:18;11024:2;11009:14;:18::i;:::-;11001:77;;;;;;;;;;;;;;;;;;;;;;11132:23;11147:7;11132:14;:23::i;:::-;11244:35;:17;:23;11262:4;11244:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11313:2;11290:11;:20;11302:7;11290:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11326:33;:17;:21;11344:2;11326:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11433:7;11429:2;11414:27;;11423:4;11414:27;;;;;;;;;;;;2417:15;10647:802;;;:::o;17893:1148::-;18159:22;18184:32;18214:1;18184:12;:18;18197:4;18184:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18159:57;;18227:18;18248:17;:26;18266:7;18248:26;;;;;;;;;;;;18227:47;;18395:14;18381:10;:28;18377:328;;18426:19;18448:12;:18;18461:4;18448:18;;;;;;;;;;;;;;;18467:14;18448:34;;;;;;;;;;;;;;;;18426:56;;18532:11;18499:12;:18;18512:4;18499:18;;;;;;;;;;;;;;;18518:10;18499:30;;;;;;;;;;;;;;;:44;;;;18649:10;18616:17;:30;18634:11;18616:30;;;;;;;;;;;:43;;;;18377:328;;18794:12;:18;18807:4;18794:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17893:1148;;;;:::o;16717:186::-;16831:12;:16;16844:2;16831:16;;;;;;;;;;;;;;;:23;;;;16802:17;:26;16820:7;16802:26;;;;;;;;;;;:52;;;;16865:12;:16;16878:2;16865:16;;;;;;;;;;;;;;;16887:7;16865:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16865:30:0;;;;;;;;;;;;;;;;;;;;;;16717:186;;:::o;9760:684::-;2422:7;;;;;;;;;;;2417:15;;799:6;;;;;;;;;;;785:20;;:10;:20;;;777:66;;;;;;;;;;;;;;;;;;;;;;10043:16;10051:7;10043;:16::i;:::-;10042:17;10034:66;;;;;;;;;;;;;;;;;;;;;;10119:18;10134:2;10119:14;:18::i;:::-;10111:76;;;;;;;;;;;;;;;;;;;;;;10302:2;10279:11;:20;10291:7;10279:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10315:33;:17;:21;10333:2;10315:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10428:7;10424:2;10403:33;;10412:10;10403:33;;;;;;;;;;;;2417:15;9760:684;;:::o;17104:164::-;17208:10;:17;;;;17181:15;:24;17197:7;17181:24;;;;;;;;;;;:44;;;;17236:10;17252:7;17236:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17236:24:0;;;;;;;;;;;;;;;;;;;;;;17104:164;:::o;44306:482:2:-;44356:27;44406:1;44400:2;:7;44396:50;;;44424:10;;;;;;;;;;;;;;;;;;;;;44396:50;44456:6;44465:2;44456:11;;44478:8;44497:69;44509:1;44504;:6;44497:69;;44527:5;;;;;;;44552:2;44547:7;;;;;;;;;44497:69;;;44576:17;44606:3;44596:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;44596:14:2;;;;44576:34;;44621:6;44636:1;44630:3;:7;44621:16;;44648:103;44661:1;44655:2;:7;44648:103;;44712:2;44707;:7;;;;;;44702:2;:12;44691:25;;44679:4;44684:3;;;;;;;44679:9;;;;;;;;;;;:37;;;;;;;;;;;44737:2;44731:8;;;;;;;;;44648:103;;;44775:4;44761:19;;;;;;44306:482;;;;:::o;40649:168::-;40727:33;40780:29;40790:2;40794;40780:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;40773:36;;40649:168;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;12442:189:0:-;2422:7;;;;;;;;;;;2417:15;;12556:1;12520:38;;:15;:24;12536:7;12520:24;;;;;;;;;;;;;;;;;;;;;:38;;;12516:108;;12610:1;12575:15;:24;12591:7;12575:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12516:108;2417:15;12442:189;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;41231:1046:2:-;41363:33;41409:16;41434:2;41409:28;;41448:16;41473:2;41448:28;;41487:16;41512:2;41487:28;;41526:16;41551:2;41526:28;;41565:16;41590:2;41565:28;;41604:19;41689:3;:10;41676:3;:10;41663:3;:10;41650:3;:10;41637:3;:10;:23;:36;:49;:62;41626:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;41626:74:2;;;;41604:96;;41711:19;41739:5;41711:34;;41756:6;41765:1;41756:10;;41777:6;41786:1;41777:10;;41807:1;41803:5;;41798:80;41814:3;:10;41810:1;:14;41798:80;;;41860:3;41864:1;41860:6;;;;;;;;;;;;;;;;41846;41853:3;;;;;;41846:11;;;;;;;;;;;:20;;;;;;;;;;;41826:3;;;;;;;41798:80;;;41897:1;41893:5;;41888:80;41904:3;:10;41900:1;:14;41888:80;;;41950:3;41954:1;41950:6;;;;;;;;;;;;;;;;41936;41943:3;;;;;;41936:11;;;;;;;;;;;:20;;;;;;;;;;;41916:3;;;;;;;41888:80;;;41987:1;41983:5;;41978:80;41994:3;:10;41990:1;:14;41978:80;;;42040:3;42044:1;42040:6;;;;;;;;;;;;;;;;42026;42033:3;;;;;;42026:11;;;;;;;;;;;:20;;;;;;;;;;;42006:3;;;;;;;41978:80;;;42077:1;42073:5;;42068:80;42084:3;:10;42080:1;:14;42068:80;;;42130:3;42134:1;42130:6;;;;;;;;;;;;;;;;42116;42123:3;;;;;;42116:11;;;;;;;;;;;:20;;;;;;;;;;;42096:3;;;;;;;42068:80;;;42167:1;42163:5;;42158:80;42174:3;:10;42170:1;:14;42158:80;;;42220:3;42224:1;42220:6;;;;;;;;;;;;;;;;42206;42213:3;;;;;;42206:11;;;;;;;;;;;:20;;;;;;;;;;;42186:3;;;;;;;42158:80;;;42262:6;42248:21;;;;;;;;;;;41231:1046;;;;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;388:1974:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;152:672;;286:3;279:4;271:6;267:17;263:27;253:2;;304:1;301;294:12;253:2;328:3;346:97;361:81;435:6;361:81;;;346:97;;;337:106;;460:5;519:6;566:3;558:4;550:6;546:17;541:3;537:27;534:36;531:2;;;583:1;580;573:12;531:2;608:1;593:225;618:6;615:1;612:13;593:225;;;676:3;698:56;750:3;738:10;698:56;;;693:3;686:69;778:4;773:3;769:14;762:21;;806:4;801:3;797:14;790:21;;650:168;640:1;637;633:9;628:14;;593:225;;;597:14;246:578;;;;;;;;851:615;;966:3;959:4;951:6;947:17;943:27;933:2;;984:1;981;974:12;933:2;1008:3;1026:78;1041:62;1096:6;1041:62;;;1026:78;;;1017:87;;1121:5;1180:6;1227:3;1219:4;1211:6;1207:17;1202:3;1198:27;1195:36;1192:2;;;1244:1;1241;1234:12;1192:2;1269:1;1254:206;1279:6;1276:1;1273:13;1254:206;;;1337:3;1359:37;1392:3;1380:10;1359:37;;;1354:3;1347:50;1420:4;1415:3;1411:14;1404:21;;1448:4;1443:3;1439:14;1432:21;;1311:149;1301:1;1298;1294:9;1289:14;;1254:206;;;1258:14;926:540;;;;;;;;1493:607;;1604:3;1597:4;1589:6;1585:17;1581:27;1571:2;;1622:1;1619;1612:12;1571:2;1646:3;1664:74;1679:58;1730:6;1679:58;;;1664:74;;;1655:83;;1755:5;1814:6;1861:3;1853:4;1845:6;1841:17;1836:3;1832:27;1829:36;1826:2;;;1878:1;1875;1868:12;1826:2;1903:1;1888:206;1913:6;1910:1;1907:13;1888:206;;;1971:3;1993:37;2026:3;2014:10;1993:37;;;1988:3;1981:50;2054:4;2049:3;2045:14;2038:21;;2082:4;2077:3;2073:14;2066:21;;1945:149;1935:1;1932;1928:9;1923:14;;1888:206;;;1892:14;1564:536;;;;;;;;2127:615;;2242:3;2235:4;2227:6;2223:17;2219:27;2209:2;;2260:1;2257;2250:12;2209:2;2284:3;2302:78;2317:62;2372:6;2317:62;;;2302:78;;;2293:87;;2397:5;2456:6;2503:3;2495:4;2487:6;2483:17;2478:3;2474:27;2471:36;2468:2;;;2520:1;2517;2510:12;2468:2;2545:1;2530:206;2555:6;2552:1;2549:13;2530:206;;;2613:3;2635:37;2668:3;2656:10;2635:37;;;2630:3;2623:50;2696:4;2691:3;2687:14;2680:21;;2724:4;2719:3;2715:14;2708:21;;2587:149;2577:1;2574;2570:9;2565:14;;2530:206;;;2534:14;2202:540;;;;;;;;2750:112;;2814:43;2849:6;2836:20;2814:43;;;2805:52;;2799:63;;;;;2869:116;;2944:36;2972:6;2966:13;2944:36;;;2935:45;;2929:56;;;;;2992:118;;3059:46;3097:6;3084:20;3059:46;;;3050:55;;3044:66;;;;;3117:116;;3183:45;3220:6;3207:20;3183:45;;;3174:54;;3168:65;;;;;3240:120;;3317:38;3347:6;3341:13;3317:38;;;3308:47;;3302:58;;;;;3368:440;;3469:3;3462:4;3454:6;3450:17;3446:27;3436:2;;3487:1;3484;3477:12;3436:2;3524:6;3511:20;3546:64;3561:48;3602:6;3561:48;;;3546:64;;;3537:73;;3630:6;3623:5;3616:21;3666:4;3658:6;3654:17;3699:4;3692:5;3688:16;3734:3;3725:6;3720:3;3716:16;3713:25;3710:2;;;3751:1;3748;3741:12;3710:2;3761:41;3795:6;3790:3;3785;3761:41;;;3429:379;;;;;;;;3817:442;;3919:3;3912:4;3904:6;3900:17;3896:27;3886:2;;3937:1;3934;3927:12;3886:2;3974:6;3961:20;3996:65;4011:49;4053:6;4011:49;;;3996:65;;;3987:74;;4081:6;4074:5;4067:21;4117:4;4109:6;4105:17;4150:4;4143:5;4139:16;4185:3;4176:6;4171:3;4167:16;4164:25;4161:2;;;4202:1;4199;4192:12;4161:2;4212:41;4246:6;4241:3;4236;4212:41;;;3879:380;;;;;;;;4267:118;;4334:46;4372:6;4359:20;4334:46;;;4325:55;;4319:66;;;;;4392:241;;4496:2;4484:9;4475:7;4471:23;4467:32;4464:2;;;4512:1;4509;4502:12;4464:2;4547:1;4564:53;4609:7;4600:6;4589:9;4585:22;4564:53;;;4554:63;;4526:97;4458:175;;;;;4640:366;;;4761:2;4749:9;4740:7;4736:23;4732:32;4729:2;;;4777:1;4774;4767:12;4729:2;4812:1;4829:53;4874:7;4865:6;4854:9;4850:22;4829:53;;;4819:63;;4791:97;4919:2;4937:53;4982:7;4973:6;4962:9;4958:22;4937:53;;;4927:63;;4898:98;4723:283;;;;;;5013:491;;;;5151:2;5139:9;5130:7;5126:23;5122:32;5119:2;;;5167:1;5164;5157:12;5119:2;5202:1;5219:53;5264:7;5255:6;5244:9;5240:22;5219:53;;;5209:63;;5181:97;5309:2;5327:53;5372:7;5363:6;5352:9;5348:22;5327:53;;;5317:63;;5288:98;5417:2;5435:53;5480:7;5471:6;5460:9;5456:22;5435:53;;;5425:63;;5396:98;5113:391;;;;;;5511:721;;;;;5675:3;5663:9;5654:7;5650:23;5646:33;5643:2;;;5692:1;5689;5682:12;5643:2;5727:1;5744:53;5789:7;5780:6;5769:9;5765:22;5744:53;;;5734:63;;5706:97;5834:2;5852:53;5897:7;5888:6;5877:9;5873:22;5852:53;;;5842:63;;5813:98;5942:2;5960:53;6005:7;5996:6;5985:9;5981:22;5960:53;;;5950:63;;5921:98;6078:2;6067:9;6063:18;6050:32;6102:18;6094:6;6091:30;6088:2;;;6134:1;6131;6124:12;6088:2;6154:62;6208:7;6199:6;6188:9;6184:22;6154:62;;;6144:72;;6029:193;5637:595;;;;;;;;6239:360;;;6357:2;6345:9;6336:7;6332:23;6328:32;6325:2;;;6373:1;6370;6363:12;6325:2;6408:1;6425:53;6470:7;6461:6;6450:9;6446:22;6425:53;;;6415:63;;6387:97;6515:2;6533:50;6575:7;6566:6;6555:9;6551:22;6533:50;;;6523:60;;6494:95;6319:280;;;;;;6606:366;;;6727:2;6715:9;6706:7;6702:23;6698:32;6695:2;;;6743:1;6740;6733:12;6695:2;6778:1;6795:53;6840:7;6831:6;6820:9;6816:22;6795:53;;;6785:63;;6757:97;6885:2;6903:53;6948:7;6939:6;6928:9;6924:22;6903:53;;;6893:63;;6864:98;6689:283;;;;;;6979:235;;7080:2;7068:9;7059:7;7055:23;7051:32;7048:2;;;7096:1;7093;7086:12;7048:2;7131:1;7148:50;7190:7;7181:6;7170:9;7166:22;7148:50;;;7138:60;;7110:94;7042:172;;;;;7221:257;;7333:2;7321:9;7312:7;7308:23;7304:32;7301:2;;;7349:1;7346;7339:12;7301:2;7384:1;7401:61;7454:7;7445:6;7434:9;7430:22;7401:61;;;7391:71;;7363:105;7295:183;;;;;7485:472;;;7616:2;7604:9;7595:7;7591:23;7587:32;7584:2;;;7632:1;7629;7622:12;7584:2;7667:1;7684:53;7729:7;7720:6;7709:9;7705:22;7684:53;;;7674:63;;7646:97;7802:2;7791:9;7787:18;7774:32;7826:18;7818:6;7815:30;7812:2;;;7858:1;7855;7848:12;7812:2;7878:63;7933:7;7924:6;7913:9;7909:22;7878:63;;;7868:73;;7753:194;7578:379;;;;;;7964:701;;;;8121:2;8109:9;8100:7;8096:23;8092:32;8089:2;;;8137:1;8134;8127:12;8089:2;8172:1;8189:53;8234:7;8225:6;8214:9;8210:22;8189:53;;;8179:63;;8151:97;8307:2;8296:9;8292:18;8279:32;8331:18;8323:6;8320:30;8317:2;;;8363:1;8360;8353:12;8317:2;8383:63;8438:7;8429:6;8418:9;8414:22;8383:63;;;8373:73;;8258:194;8511:2;8500:9;8496:18;8483:32;8535:18;8527:6;8524:30;8521:2;;;8567:1;8564;8557:12;8521:2;8587:62;8641:7;8632:6;8621:9;8617:22;8587:62;;;8577:72;;8462:193;8083:582;;;;;;8672:239;;8775:2;8763:9;8754:7;8750:23;8746:32;8743:2;;;8791:1;8788;8781:12;8743:2;8826:1;8843:52;8887:7;8878:6;8867:9;8863:22;8843:52;;;8833:62;;8805:96;8737:174;;;;;8918:261;;9032:2;9020:9;9011:7;9007:23;9003:32;9000:2;;;9048:1;9045;9038:12;9000:2;9083:1;9100:63;9155:7;9146:6;9135:9;9131:22;9100:63;;;9090:73;;9062:107;8994:185;;;;;9186:241;;9290:2;9278:9;9269:7;9265:23;9261:32;9258:2;;;9306:1;9303;9296:12;9258:2;9341:1;9358:53;9403:7;9394:6;9383:9;9379:22;9358:53;;;9348:63;;9320:97;9252:175;;;;;9434:366;;;9555:2;9543:9;9534:7;9530:23;9526:32;9523:2;;;9571:1;9568;9561:12;9523:2;9606:1;9623:53;9668:7;9659:6;9648:9;9644:22;9623:53;;;9613:63;;9585:97;9713:2;9731:53;9776:7;9767:6;9756:9;9752:22;9731:53;;;9721:63;;9692:98;9517:283;;;;;;9807:966;;;;;;10090:3;10078:9;10069:7;10065:23;10061:33;10058:2;;;10107:1;10104;10097:12;10058:2;10142:1;10159:53;10204:7;10195:6;10184:9;10180:22;10159:53;;;10149:63;;10121:97;10249:2;10267:76;10335:7;10326:6;10315:9;10311:22;10267:76;;;10257:86;;10228:121;10380:2;10398:95;10485:7;10476:6;10465:9;10461:22;10398:95;;;10388:105;;10359:140;10530:3;10549:76;10617:7;10608:6;10597:9;10593:22;10549:76;;;10539:86;;10509:122;10662:3;10681:76;10749:7;10740:6;10729:9;10725:22;10681:76;;;10671:86;;10641:122;10052:721;;;;;;;;;10781:253;;10906:88;10990:3;10982:6;10906:88;;;11023:4;11018:3;11014:14;11000:28;;10899:135;;;;;11043:173;;11130:46;11172:3;11164:6;11130:46;;;11205:4;11200:3;11196:14;11182:28;;11123:93;;;;;11224:142;11315:45;11354:5;11315:45;;;11310:3;11303:58;11297:69;;;11373:120;11456:31;11481:5;11456:31;;;11451:3;11444:44;11438:55;;;11539:743;11710:71;11775:5;11710:71;;;11794:103;11890:6;11885:3;11794:103;;;11787:110;;11917:73;11984:5;11917:73;;;12011:1;11996:274;12021:6;12018:1;12015:13;11996:274;;;12068:101;12165:3;12156:6;12150:13;12068:101;;;12061:108;;12186:77;12256:6;12186:77;;;12176:87;;12043:1;12040;12036:9;12031:14;;11996:274;;;12000:14;11689:593;;;;;12323:591;12456:52;12502:5;12456:52;;;12521:84;12598:6;12593:3;12521:84;;;12514:91;;12625:54;12673:5;12625:54;;;12700:1;12685:217;12710:6;12707:1;12704:13;12685:217;;;12757:63;12816:3;12807:6;12801:13;12757:63;;;12750:70;;12837:58;12888:6;12837:58;;;12827:68;;12732:1;12729;12725:9;12720:14;;12685:217;;;12689:14;12435:479;;;;;12955:591;13088:52;13134:5;13088:52;;;13153:84;13230:6;13225:3;13153:84;;;13146:91;;13257:54;13305:5;13257:54;;;13332:1;13317:217;13342:6;13339:1;13336:13;13317:217;;;13389:63;13448:3;13439:6;13433:13;13389:63;;;13382:70;;13469:58;13520:6;13469:58;;;13459:68;;13364:1;13361;13357:9;13352:14;;13317:217;;;13321:14;13067:479;;;;;13587:555;13706:48;13748:5;13706:48;;;13767:74;13834:6;13829:3;13767:74;;;13760:81;;13861:50;13905:5;13861:50;;;13932:1;13917:213;13942:6;13939:1;13936:13;13917:213;;;13989:63;14048:3;14039:6;14033:13;13989:63;;;13982:70;;14069:54;14116:6;14069:54;;;14059:64;;13964:1;13961;13957:9;13952:14;;13917:213;;;13921:14;13685:457;;;;;14150:111;14227:28;14249:5;14227:28;;;14222:3;14215:41;14209:52;;;14268:343;;14378:38;14410:5;14378:38;;;14428:70;14491:6;14486:3;14428:70;;;14421:77;;14503:52;14548:6;14543:3;14536:4;14529:5;14525:16;14503:52;;;14576:29;14598:6;14576:29;;;14571:3;14567:39;14560:46;;14358:253;;;;;;14618:162;14719:55;14768:5;14719:55;;;14714:3;14707:68;14701:79;;;14787:347;;14899:39;14932:5;14899:39;;;14950:71;15014:6;15009:3;14950:71;;;14943:78;;15026:52;15071:6;15066:3;15059:4;15052:5;15048:16;15026:52;;;15099:29;15121:6;15099:29;;;15094:3;15090:39;15083:46;;14879:255;;;;;;15141:360;;15271:39;15304:5;15271:39;;;15322:89;15404:6;15399:3;15322:89;;;15315:96;;15416:52;15461:6;15456:3;15449:4;15442:5;15438:16;15416:52;;;15489:6;15484:3;15480:16;15473:23;;15251:250;;;;;;15509:465;;15669:67;15733:2;15728:3;15669:67;;;15662:74;;15769:66;15765:1;15760:3;15756:11;15749:87;15870:66;15865:2;15860:3;15856:12;15849:88;15965:2;15960:3;15956:12;15949:19;;15655:319;;;;15983:465;;16143:67;16207:2;16202:3;16143:67;;;16136:74;;16243:66;16239:1;16234:3;16230:11;16223:87;16344:66;16339:2;16334:3;16330:12;16323:88;16439:2;16434:3;16430:12;16423:19;;16129:319;;;;16457:364;;16617:67;16681:2;16676:3;16617:67;;;16610:74;;16717:66;16713:1;16708:3;16704:11;16697:87;16812:2;16807:3;16803:12;16796:19;;16603:218;;;;16830:465;;16990:67;17054:2;17049:3;16990:67;;;16983:74;;17090:66;17086:1;17081:3;17077:11;17070:87;17191:66;17186:2;17181:3;17177:12;17170:88;17286:2;17281:3;17277:12;17270:19;;16976:319;;;;17304:465;;17464:67;17528:2;17523:3;17464:67;;;17457:74;;17564:66;17560:1;17555:3;17551:11;17544:87;17665:66;17660:2;17655:3;17651:12;17644:88;17760:2;17755:3;17751:12;17744:19;;17450:319;;;;17778:465;;17938:67;18002:2;17997:3;17938:67;;;17931:74;;18038:66;18034:1;18029:3;18025:11;18018:87;18139:66;18134:2;18129:3;18125:12;18118:88;18234:2;18229:3;18225:12;18218:19;;17924:319;;;;18252:364;;18412:67;18476:2;18471:3;18412:67;;;18405:74;;18512:66;18508:1;18503:3;18499:11;18492:87;18607:2;18602:3;18598:12;18591:19;;18398:218;;;;18625:465;;18785:67;18849:2;18844:3;18785:67;;;18778:74;;18885:66;18881:1;18876:3;18872:11;18865:87;18986:66;18981:2;18976:3;18972:12;18965:88;19081:2;19076:3;19072:12;19065:19;;18771:319;;;;19099:465;;19259:67;19323:2;19318:3;19259:67;;;19252:74;;19359:66;19355:1;19350:3;19346:11;19339:87;19460:66;19455:2;19450:3;19446:12;19439:88;19555:2;19550:3;19546:12;19539:19;;19245:319;;;;19573:465;;19733:67;19797:2;19792:3;19733:67;;;19726:74;;19833:66;19829:1;19824:3;19820:11;19813:87;19934:66;19929:2;19924:3;19920:12;19913:88;20029:2;20024:3;20020:12;20013:19;;19719:319;;;;20047:465;;20207:67;20271:2;20266:3;20207:67;;;20200:74;;20307:66;20303:1;20298:3;20294:11;20287:87;20408:66;20403:2;20398:3;20394:12;20387:88;20503:2;20498:3;20494:12;20487:19;;20193:319;;;;20521:465;;20681:67;20745:2;20740:3;20681:67;;;20674:74;;20781:66;20777:1;20772:3;20768:11;20761:87;20882:66;20877:2;20872:3;20868:12;20861:88;20977:2;20972:3;20968:12;20961:19;;20667:319;;;;20995:465;;21155:67;21219:2;21214:3;21155:67;;;21148:74;;21255:66;21251:1;21246:3;21242:11;21235:87;21356:66;21351:2;21346:3;21342:12;21335:88;21451:2;21446:3;21442:12;21435:19;;21141:319;;;;21468:110;21541:31;21566:5;21541:31;;;21536:3;21529:44;21523:55;;;21585:120;21668:31;21693:5;21668:31;;;21663:3;21656:44;21650:55;;;21712:266;;21858:95;21949:3;21940:6;21858:95;;;21851:102;;21970:3;21963:10;;21839:139;;;;;21985:213;;22103:2;22092:9;22088:18;22080:26;;22117:71;22185:1;22174:9;22170:17;22161:6;22117:71;;;22074:124;;;;;22205:647;;22433:3;22422:9;22418:19;22410:27;;22448:79;22524:1;22513:9;22509:17;22500:6;22448:79;;;22538:72;22606:2;22595:9;22591:18;22582:6;22538:72;;;22621;22689:2;22678:9;22674:18;22665:6;22621:72;;;22741:9;22735:4;22731:20;22726:2;22715:9;22711:18;22704:48;22766:76;22837:4;22828:6;22766:76;;;22758:84;;22404:448;;;;;;;;22859:993;;23283:3;23272:9;23268:19;23260:27;;23298:117;23412:1;23401:9;23397:17;23388:6;23298:117;;;23426:156;23578:2;23567:9;23563:18;23554:6;23426:156;;;23593:119;23707:3;23696:9;23692:19;23683:6;23593:119;;;23723;23837:3;23826:9;23822:19;23813:6;23723:119;;;23254:598;;;;;;;;23859:201;;23971:2;23960:9;23956:18;23948:26;;23985:65;24047:1;24036:9;24032:17;24023:6;23985:65;;;23942:118;;;;;24067:249;;24203:2;24192:9;24188:18;24180:26;;24217:89;24303:1;24292:9;24288:17;24279:6;24217:89;;;24174:142;;;;;24323:301;;24461:2;24450:9;24446:18;24438:26;;24511:9;24505:4;24501:20;24497:1;24486:9;24482:17;24475:47;24536:78;24609:4;24600:6;24536:78;;;24528:86;;24432:192;;;;;24631:407;;24822:2;24811:9;24807:18;24799:26;;24872:9;24866:4;24862:20;24858:1;24847:9;24843:17;24836:47;24897:131;25023:4;24897:131;;;24889:139;;24793:245;;;;25045:407;;25236:2;25225:9;25221:18;25213:26;;25286:9;25280:4;25276:20;25272:1;25261:9;25257:17;25250:47;25311:131;25437:4;25311:131;;;25303:139;;25207:245;;;;25459:407;;25650:2;25639:9;25635:18;25627:26;;25700:9;25694:4;25690:20;25686:1;25675:9;25671:17;25664:47;25725:131;25851:4;25725:131;;;25717:139;;25621:245;;;;25873:407;;26064:2;26053:9;26049:18;26041:26;;26114:9;26108:4;26104:20;26100:1;26089:9;26085:17;26078:47;26139:131;26265:4;26139:131;;;26131:139;;26035:245;;;;26287:407;;26478:2;26467:9;26463:18;26455:26;;26528:9;26522:4;26518:20;26514:1;26503:9;26499:17;26492:47;26553:131;26679:4;26553:131;;;26545:139;;26449:245;;;;26701:407;;26892:2;26881:9;26877:18;26869:26;;26942:9;26936:4;26932:20;26928:1;26917:9;26913:17;26906:47;26967:131;27093:4;26967:131;;;26959:139;;26863:245;;;;27115:407;;27306:2;27295:9;27291:18;27283:26;;27356:9;27350:4;27346:20;27342:1;27331:9;27327:17;27320:47;27381:131;27507:4;27381:131;;;27373:139;;27277:245;;;;27529:407;;27720:2;27709:9;27705:18;27697:26;;27770:9;27764:4;27760:20;27756:1;27745:9;27741:17;27734:47;27795:131;27921:4;27795:131;;;27787:139;;27691:245;;;;27943:407;;28134:2;28123:9;28119:18;28111:26;;28184:9;28178:4;28174:20;28170:1;28159:9;28155:17;28148:47;28209:131;28335:4;28209:131;;;28201:139;;28105:245;;;;28357:407;;28548:2;28537:9;28533:18;28525:26;;28598:9;28592:4;28588:20;28584:1;28573:9;28569:17;28562:47;28623:131;28749:4;28623:131;;;28615:139;;28519:245;;;;28771:407;;28962:2;28951:9;28947:18;28939:26;;29012:9;29006:4;29002:20;28998:1;28987:9;28983:17;28976:47;29037:131;29163:4;29037:131;;;29029:139;;28933:245;;;;29185:407;;29376:2;29365:9;29361:18;29353:26;;29426:9;29420:4;29416:20;29412:1;29401:9;29397:17;29390:47;29451:131;29577:4;29451:131;;;29443:139;;29347:245;;;;29599:407;;29790:2;29779:9;29775:18;29767:26;;29840:9;29834:4;29830:20;29826:1;29815:9;29811:17;29804:47;29865:131;29991:4;29865:131;;;29857:139;;29761:245;;;;30013:213;;30131:2;30120:9;30116:18;30108:26;;30145:71;30213:1;30202:9;30198:17;30189:6;30145:71;;;30102:124;;;;;30233:324;;30379:2;30368:9;30364:18;30356:26;;30393:71;30461:1;30450:9;30446:17;30437:6;30393:71;;;30475:72;30543:2;30532:9;30528:18;30519:6;30475:72;;;30350:207;;;;;;30564:256;;30626:2;30620:9;30610:19;;30664:4;30656:6;30652:17;30763:6;30751:10;30748:22;30727:18;30715:10;30712:34;30709:62;30706:2;;;30784:1;30781;30774:12;30706:2;30804:10;30800:2;30793:22;30604:216;;;;;30827:252;;31003:18;30995:6;30992:30;30989:2;;;31035:1;31032;31025:12;30989:2;31064:4;31056:6;31052:17;31044:25;;30926:153;;;;31086:233;;31243:18;31235:6;31232:30;31229:2;;;31275:1;31272;31265:12;31229:2;31304:4;31296:6;31292:17;31284:25;;31166:153;;;;31326:229;;31479:18;31471:6;31468:30;31465:2;;;31511:1;31508;31501:12;31465:2;31540:4;31532:6;31528:17;31520:25;;31402:153;;;;31562:233;;31719:18;31711:6;31708:30;31705:2;;;31751:1;31748;31741:12;31705:2;31780:4;31772:6;31768:17;31760:25;;31642:153;;;;31802:258;;31945:18;31937:6;31934:30;31931:2;;;31977:1;31974;31967:12;31931:2;32021:4;32017:9;32010:4;32002:6;31998:17;31994:33;31986:41;;32050:4;32044;32040:15;32032:23;;31868:192;;;;32067:259;;32211:18;32203:6;32200:30;32197:2;;;32243:1;32240;32233:12;32197:2;32287:4;32283:9;32276:4;32268:6;32264:17;32260:33;32252:41;;32316:4;32310;32306:15;32298:23;;32134:192;;;;32335:127;;32449:6;32438:17;;32430:32;;;;32473:108;;32568:6;32557:17;;32549:32;;;;32592:104;;32683:6;32672:17;;32664:32;;;;32707:108;;32802:6;32791:17;;32783:32;;;;32824:115;;32931:3;32921:13;;32915:24;;;;32946:96;;33034:3;33024:13;;33018:24;;;;33049:92;;33133:3;33123:13;;33117:24;;;;33148:96;;33236:3;33226:13;;33220:24;;;;33251:91;;33331:5;33325:12;33315:22;;33309:33;;;;33349:92;;33430:5;33424:12;33414:22;;33408:33;;;;33449:139;;33577:4;33569:6;33565:17;33554:28;;33547:41;;;;33597:120;;33706:4;33698:6;33694:17;33683:28;;33676:41;;;;33726:116;;33831:4;33823:6;33819:17;33808:28;;33801:41;;;;33851:120;;33960:4;33952:6;33948:17;33937:28;;33930:41;;;;33980:159;;34130:3;34115:18;;34108:31;;;;;34148:140;;34279:3;34264:18;;34257:31;;;;;34297:130;;34418:3;34403:18;;34396:31;;;;;34436:140;;34567:3;34552:18;;34545:31;;;;;34585:162;;34699:6;34694:3;34687:19;34736:4;34731:3;34727:14;34712:29;;34680:67;;;;;34756:163;;34871:6;34866:3;34859:19;34908:4;34903:3;34899:14;34884:29;;34852:67;;;;;34928:145;;35064:3;35049:18;;35042:31;;;;;35081:105;;35150:31;35175:5;35150:31;;;35139:42;;35133:53;;;;35193:92;;35273:5;35266:13;35259:21;35248:32;;35242:43;;;;35292:128;;35372:42;35365:5;35361:54;35350:65;;35344:76;;;;35427:79;;35496:5;35485:16;;35479:27;;;;35513:105;;35582:31;35607:5;35582:31;;;35571:42;;35565:53;;;;35625:92;;35705:5;35698:13;35691:21;35680:32;;35674:43;;;;35724:79;;35793:5;35782:16;;35776:27;;;;35810:151;;35889:66;35882:5;35878:78;35867:89;;35861:100;;;;35968:128;;36048:42;36041:5;36037:54;36026:65;;36020:76;;;;36103:79;;36172:5;36161:16;;36155:27;;;;36189:129;;36276:37;36307:5;36276:37;;;36263:50;;36257:61;;;;36325:157;;36422:55;36471:5;36422:55;;;36409:68;;36403:79;;;;36489:133;;36586:31;36611:5;36586:31;;;36573:44;;36567:55;;;;36629:121;;36708:37;36739:5;36708:37;;;36695:50;;36689:61;;;;36757:115;;36836:31;36861:5;36836:31;;;36823:44;;36817:55;;;;36880:145;36961:6;36956:3;36951;36938:30;37017:1;37008:6;37003:3;36999:16;36992:27;36931:94;;;;37034:268;37099:1;37106:101;37120:6;37117:1;37114:13;37106:101;;;37196:1;37191:3;37187:11;37181:18;37177:1;37172:3;37168:11;37161:39;37142:2;37139:1;37135:10;37130:15;;37106:101;;;37222:6;37219:1;37216:13;37213:2;;;37287:1;37278:6;37273:3;37269:16;37262:27;37213:2;37083:219;;;;;37310:97;;37398:2;37394:7;37389:2;37382:5;37378:14;37374:28;37364:38;;37358:49;;;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport './verifier.sol';\r\nimport './ERC721Mintable.sol';\r\n\r\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\r\ncontract verifier is Verifier {\r\n    \r\n}\r\n\r\n\r\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\r\ncontract SolnSquareVerifier is ERC721MintableComplete{\r\n\r\n// TODO define a solutions struct that can hold an index & an address\r\nstruct Solution{\r\n    uint _index;\r\n    address _address;\r\n    bool isValue;\r\n}\r\n\r\n// TODO define an array of the above struct\r\n//Solution[] solutions;\r\n\r\n// TODO define a mapping to store unique solutions submitted\r\nmapping (uint => Solution) uniqueSolutions;\r\n\r\n// Define an interface to the verifier contract generated by zokrates--to use it for verification before minting new tokens\r\nVerifier public squareVerifier; //to access the method in there: verifyTx\r\n\r\n\r\n// TODO Create an event to emit when a solution is added\r\nevent SolutionAdded(uint _index, address _address);\r\n\r\n//Constructor\r\nconstructor(address verifierAddress) public\r\n{\r\n    squareVerifier = Verifier(verifierAddress);\r\n}\r\n\r\n\r\n// TODO Create a function to add the solutions to the array and emit the event\r\nfunction addSolution(uint Id, address owner) public{\r\n    //solutions.push(sol);\r\n    Solution memory sol = uniqueSolutions[Id];\r\n    require(!sol.isValue, \"Solution is not unique.\");\r\n    sol = Solution(Id, owner, true);\r\n    uniqueSolutions[sol._index] = sol;\r\n    emit SolutionAdded(sol._index, sol._address);\r\n}\r\n\r\n// TODO Create a function to mint new NFT only after the solution has been verified\r\n//  - make sure the solution is unique (has not been used before)\r\n//  - make sure you handle metadata as well as tokenSupply\r\n//      -returns a true boolean upon completion of the function\r\n//      -calls the superclass mint function\r\nfunction mintTokens(\r\n        uint Id,\r\n        uint[2] memory a,\r\n        uint[2][2] memory b,\r\n        uint[2] memory c, uint[1] memory input) \r\n    public\r\n    returns(bool result)\r\n{\r\n    require(squareVerifier.verifyTx(a, b, c, input), \"Cannot mint a new token- Verification failed\");\r\n    addSolution(Id, msg.sender);\r\n    result = mint(msg.sender, Id);\r\n    require(result == true, \"Couldn't mint the token\");\r\n}\r\n\r\n}//end contract\r\n/*\r\n//Interface to verifier contract generated by zokrates:\r\ncontract Verifier{\r\n    //function verifyingKey() pure internal returns (VerifyingKey memory vk);\r\n    //function verify(uint[] memory input, Proof memory proof) internal view returns (uint);\r\n    function verifyTx(\r\n            uint[2] memory a,\r\n            uint[2][2] memory b,\r\n            uint[2] memory c, \r\n            uint[2] memory input\r\n        ) public view returns (bool r);\r\n}\r\n*/",
  "sourcePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7632
      ],
      "verifier": [
        7497
      ]
    },
    "id": 7633,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7491,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7492,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "absolutePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7493,
        "nodeType": "ImportDirective",
        "scope": 7633,
        "sourceUnit": 10167,
        "src": "71:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7494,
        "nodeType": "ImportDirective",
        "scope": 7633,
        "sourceUnit": 1165,
        "src": "97:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7495,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10166,
              "src": "260:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10166",
                "typeString": "contract Verifier"
              }
            },
            "id": 7496,
            "nodeType": "InheritanceSpecifier",
            "src": "260:8:3"
          }
        ],
        "contractDependencies": [
          10166
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7497,
        "linearizedBaseContracts": [
          7497,
          10166
        ],
        "name": "verifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7633,
        "src": "239:40:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7498,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1164,
              "src": "419:22:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1164",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7499,
            "nodeType": "InheritanceSpecifier",
            "src": "419:22:3"
          }
        ],
        "contractDependencies": [
          682,
          132,
          79,
          980,
          178,
          1106,
          1164,
          7489
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7632,
        "linearizedBaseContracts": [
          7632,
          1164,
          1106,
          7489,
          980,
          682,
          178,
          132,
          79
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7506,
            "members": [
              {
                "constant": false,
                "id": 7501,
                "name": "_index",
                "nodeType": "VariableDeclaration",
                "scope": 7506,
                "src": "539:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7500,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7503,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 7506,
                "src": "557:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7502,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "557:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7505,
                "name": "isValue",
                "nodeType": "VariableDeclaration",
                "scope": 7506,
                "src": "580:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7504,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "580:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7632,
            "src": "517:79:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7510,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7632,
            "src": "734:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7506_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7509,
              "keyType": {
                "id": 7507,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "743:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "734:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7506_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7508,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7506,
                "src": "751:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7506_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7512,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7632,
            "src": "906:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$10166",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7511,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10166,
              "src": "906:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10166",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7518,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7514,
                  "indexed": false,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7518,
                  "src": "1063:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7513,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7516,
                  "indexed": false,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7518,
                  "src": "1076:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1062:31:3"
            },
            "src": "1043:51:3"
          },
          {
            "body": {
              "id": 7529,
              "nodeType": "Block",
              "src": "1158:53:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7523,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7512,
                      "src": "1165:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10166",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7525,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7520,
                          "src": "1191:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7524,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10166,
                        "src": "1182:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$10166_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1182:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10166",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "1165:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$10166",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7528,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7520,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "1125:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1124:25:3"
            },
            "returnParameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1158:0:3"
            },
            "scope": 7632,
            "src": "1113:98:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7572,
              "nodeType": "Block",
              "src": "1348:264:3",
              "statements": [
                {
                  "assignments": [
                    7538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7538,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7572,
                      "src": "1383:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7537,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7506,
                        "src": "1383:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7506_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7542,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7539,
                      "name": "uniqueSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7510,
                      "src": "1405:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7506_storage_$",
                        "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7541,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7540,
                      "name": "Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7532,
                      "src": "1421:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1405:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7506_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1383:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1439:12:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7544,
                            "name": "sol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7538,
                            "src": "1440:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution memory"
                            }
                          },
                          "id": 7545,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7505,
                          "src": "1440:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e697175652e",
                        "id": 7547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1453:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        },
                        "value": "Solution is not unique."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        }
                      ],
                      "id": 7543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "1431:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7549,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7550,
                      "name": "sol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7538,
                      "src": "1486:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7552,
                          "name": "Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7532,
                          "src": "1501:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7553,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7534,
                          "src": "1505:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1512:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7551,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "1492:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7506_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1492:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7506_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1486:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "id": 7557,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7558,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7510,
                        "src": "1524:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7506_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7561,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7559,
                          "name": "sol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7538,
                          "src": "1540:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7560,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7501,
                        "src": "1540:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1524:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7506_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7562,
                      "name": "sol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7538,
                      "src": "1554:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1524:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7506_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7564,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:33:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7566,
                          "name": "sol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7538,
                          "src": "1583:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7567,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7501,
                        "src": "1583:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7568,
                          "name": "sol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7538,
                          "src": "1595:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7506_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7569,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7503,
                        "src": "1595:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7565,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7518,
                      "src": "1569:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7571,
                  "nodeType": "EmitStatement",
                  "src": "1564:44:3"
                }
              ]
            },
            "documentation": null,
            "id": 7573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7532,
                  "name": "Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "1318:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7534,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "1327:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1317:24:3"
            },
            "returnParameters": {
              "id": 7536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:0:3"
            },
            "scope": 7632,
            "src": "1297:315:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7630,
              "nodeType": "Block",
              "src": "2123:234:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7601,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7579,
                            "src": "2162:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7602,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7585,
                            "src": "2165:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7603,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7589,
                            "src": "2168:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7604,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7593,
                            "src": "2171:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7599,
                            "name": "squareVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "2138:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$10166",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10165,
                          "src": "2138:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[1] memory) view external returns (bool)"
                          }
                        },
                        "id": 7605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2138:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74206d696e742061206e657720746f6b656e2d20566572696669636174696f6e206661696c6564",
                        "id": 7606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2179:46:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                          "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                        },
                        "value": "Cannot mint a new token- Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                          "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                        }
                      ],
                      "id": 7598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "2130:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2130:96:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7608,
                  "nodeType": "ExpressionStatement",
                  "src": "2130:96:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7610,
                        "name": "Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7575,
                        "src": "2245:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7611,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10508,
                          "src": "2249:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2249:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7609,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7573,
                      "src": "2233:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7614,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7615,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7596,
                      "src": "2267:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7617,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10508,
                            "src": "2281:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2281:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7619,
                          "name": "Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7575,
                          "src": "2293:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7616,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "2276:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 7620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2276:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2267:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7622,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7624,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7596,
                          "src": "2311:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2321:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2311:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c646e2774206d696e742074686520746f6b656e",
                        "id": 7627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2327:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ee69982baedabd0e879c55834b6adf43165ea6ec3a256e0e0adc1b550c626b1",
                          "typeString": "literal_string \"Couldn't mint the token\""
                        },
                        "value": "Couldn't mint the token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ee69982baedabd0e879c55834b6adf43165ea6ec3a256e0e0adc1b550c626b1",
                          "typeString": "literal_string \"Couldn't mint the token\""
                        }
                      ],
                      "id": 7623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "2303:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7629,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:50:3"
                }
              ]
            },
            "documentation": null,
            "id": 7631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7575,
                  "name": "Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 7631,
                  "src": "1968:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7579,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7631,
                  "src": "1986:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7576,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1986:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7578,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1991:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1986:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7585,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7631,
                  "src": "2013:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7580,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2013:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7582,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2018:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2013:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7584,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2021:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2013:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7589,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7631,
                  "src": "2043:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7586,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2043:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7588,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2048:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2043:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7593,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7631,
                  "src": "2061:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7590,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2061:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7592,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2066:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2061:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1957:125:3"
            },
            "returnParameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7596,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 7631,
                  "src": "2109:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2108:13:3"
            },
            "scope": 7632,
            "src": "1938:419:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7633,
        "src": "388:1974:3"
      }
    ],
    "src": "0:2833:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7632
        ],
        "verifier": [
          7497
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7491,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7492,
        "name": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "attributes": {
          "SourceUnit": 10167,
          "absolutePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7633,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7493,
        "name": "ImportDirective",
        "src": "71:24:3"
      },
      {
        "attributes": {
          "SourceUnit": 1165,
          "absolutePath": "/home/khalil/capstone/test/HousingManagement-master/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7633,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7494,
        "name": "ImportDirective",
        "src": "97:30:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            10166
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7497,
            10166
          ],
          "name": "verifier",
          "nodes": [
            null
          ],
          "scope": 7633
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10166,
                  "type": "contract Verifier"
                },
                "id": 7495,
                "name": "UserDefinedTypeName",
                "src": "260:8:3"
              }
            ],
            "id": 7496,
            "name": "InheritanceSpecifier",
            "src": "260:8:3"
          }
        ],
        "id": 7497,
        "name": "ContractDefinition",
        "src": "239:40:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            682,
            132,
            79,
            980,
            178,
            1106,
            1164,
            7489
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7632,
            1164,
            1106,
            7489,
            980,
            682,
            178,
            132,
            79
          ],
          "name": "SolnSquareVerifier",
          "scope": 7633
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1164,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7498,
                "name": "UserDefinedTypeName",
                "src": "419:22:3"
              }
            ],
            "id": 7499,
            "name": "InheritanceSpecifier",
            "src": "419:22:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7632,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_index",
                  "scope": 7506,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 7500,
                    "name": "ElementaryTypeName",
                    "src": "539:4:3"
                  }
                ],
                "id": 7501,
                "name": "VariableDeclaration",
                "src": "539:11:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_address",
                  "scope": 7506,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7502,
                    "name": "ElementaryTypeName",
                    "src": "557:7:3"
                  }
                ],
                "id": 7503,
                "name": "VariableDeclaration",
                "src": "557:16:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "isValue",
                  "scope": 7506,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7504,
                    "name": "ElementaryTypeName",
                    "src": "580:4:3"
                  }
                ],
                "id": 7505,
                "name": "VariableDeclaration",
                "src": "580:12:3"
              }
            ],
            "id": 7506,
            "name": "StructDefinition",
            "src": "517:79:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7632,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 7507,
                    "name": "ElementaryTypeName",
                    "src": "743:4:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7506,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7508,
                    "name": "UserDefinedTypeName",
                    "src": "751:8:3"
                  }
                ],
                "id": 7509,
                "name": "Mapping",
                "src": "734:26:3"
              }
            ],
            "id": 7510,
            "name": "VariableDeclaration",
            "src": "734:42:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "squareVerifier",
              "scope": 7632,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10166,
                  "type": "contract Verifier"
                },
                "id": 7511,
                "name": "UserDefinedTypeName",
                "src": "906:8:3"
              }
            ],
            "id": 7512,
            "name": "VariableDeclaration",
            "src": "906:30:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_index",
                      "scope": 7518,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7513,
                        "name": "ElementaryTypeName",
                        "src": "1063:4:3"
                      }
                    ],
                    "id": 7514,
                    "name": "VariableDeclaration",
                    "src": "1063:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_address",
                      "scope": 7518,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7515,
                        "name": "ElementaryTypeName",
                        "src": "1076:7:3"
                      }
                    ],
                    "id": 7516,
                    "name": "VariableDeclaration",
                    "src": "1076:16:3"
                  }
                ],
                "id": 7517,
                "name": "ParameterList",
                "src": "1062:31:3"
              }
            ],
            "id": 7518,
            "name": "EventDefinition",
            "src": "1043:51:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7632,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7530,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7519,
                        "name": "ElementaryTypeName",
                        "src": "1125:7:3"
                      }
                    ],
                    "id": 7520,
                    "name": "VariableDeclaration",
                    "src": "1125:23:3"
                  }
                ],
                "id": 7521,
                "name": "ParameterList",
                "src": "1124:25:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7522,
                "name": "ParameterList",
                "src": "1158:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7512,
                              "type": "contract Verifier",
                              "value": "squareVerifier"
                            },
                            "id": 7523,
                            "name": "Identifier",
                            "src": "1165:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10166,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7524,
                                "name": "Identifier",
                                "src": "1182:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7520,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7525,
                                "name": "Identifier",
                                "src": "1191:15:3"
                              }
                            ],
                            "id": 7526,
                            "name": "FunctionCall",
                            "src": "1182:25:3"
                          }
                        ],
                        "id": 7527,
                        "name": "Assignment",
                        "src": "1165:42:3"
                      }
                    ],
                    "id": 7528,
                    "name": "ExpressionStatement",
                    "src": "1165:42:3"
                  }
                ],
                "id": 7529,
                "name": "Block",
                "src": "1158:53:3"
              }
            ],
            "id": 7530,
            "name": "FunctionDefinition",
            "src": "1113:98:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7632,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "Id",
                      "scope": 7573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7531,
                        "name": "ElementaryTypeName",
                        "src": "1318:4:3"
                      }
                    ],
                    "id": 7532,
                    "name": "VariableDeclaration",
                    "src": "1318:7:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 7573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7533,
                        "name": "ElementaryTypeName",
                        "src": "1327:7:3"
                      }
                    ],
                    "id": 7534,
                    "name": "VariableDeclaration",
                    "src": "1327:13:3"
                  }
                ],
                "id": 7535,
                "name": "ParameterList",
                "src": "1317:24:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7536,
                "name": "ParameterList",
                "src": "1348:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7538
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7572,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7506,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7537,
                            "name": "UserDefinedTypeName",
                            "src": "1383:8:3"
                          }
                        ],
                        "id": 7538,
                        "name": "VariableDeclaration",
                        "src": "1383:19:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7510,
                              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                              "value": "uniqueSolutions"
                            },
                            "id": 7539,
                            "name": "Identifier",
                            "src": "1405:15:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7532,
                              "type": "uint256",
                              "value": "Id"
                            },
                            "id": 7540,
                            "name": "Identifier",
                            "src": "1421:2:3"
                          }
                        ],
                        "id": 7541,
                        "name": "IndexAccess",
                        "src": "1405:19:3"
                      }
                    ],
                    "id": 7542,
                    "name": "VariableDeclarationStatement",
                    "src": "1383:41:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                                  "typeString": "literal_string \"Solution is not unique.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10511,
                                10512
                              ],
                              "referencedDeclaration": 10512,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7543,
                            "name": "Identifier",
                            "src": "1431:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isValue",
                                  "referencedDeclaration": 7505,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7538,
                                      "type": "struct SolnSquareVerifier.Solution memory",
                                      "value": "sol"
                                    },
                                    "id": 7544,
                                    "name": "Identifier",
                                    "src": "1440:3:3"
                                  }
                                ],
                                "id": 7545,
                                "name": "MemberAccess",
                                "src": "1440:11:3"
                              }
                            ],
                            "id": 7546,
                            "name": "UnaryOperation",
                            "src": "1439:12:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e206973206e6f7420756e697175652e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is not unique.\"",
                              "value": "Solution is not unique."
                            },
                            "id": 7547,
                            "name": "Literal",
                            "src": "1453:25:3"
                          }
                        ],
                        "id": 7548,
                        "name": "FunctionCall",
                        "src": "1431:48:3"
                      }
                    ],
                    "id": 7549,
                    "name": "ExpressionStatement",
                    "src": "1431:48:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7538,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "sol"
                            },
                            "id": 7550,
                            "name": "Identifier",
                            "src": "1486:3:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7506,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7551,
                                "name": "Identifier",
                                "src": "1492:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7532,
                                  "type": "uint256",
                                  "value": "Id"
                                },
                                "id": 7552,
                                "name": "Identifier",
                                "src": "1501:2:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7534,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 7553,
                                "name": "Identifier",
                                "src": "1505:5:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7554,
                                "name": "Literal",
                                "src": "1512:4:3"
                              }
                            ],
                            "id": 7555,
                            "name": "FunctionCall",
                            "src": "1492:25:3"
                          }
                        ],
                        "id": 7556,
                        "name": "Assignment",
                        "src": "1486:31:3"
                      }
                    ],
                    "id": 7557,
                    "name": "ExpressionStatement",
                    "src": "1486:31:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7510,
                                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7558,
                                "name": "Identifier",
                                "src": "1524:15:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_index",
                                  "referencedDeclaration": 7501,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7538,
                                      "type": "struct SolnSquareVerifier.Solution memory",
                                      "value": "sol"
                                    },
                                    "id": 7559,
                                    "name": "Identifier",
                                    "src": "1540:3:3"
                                  }
                                ],
                                "id": 7560,
                                "name": "MemberAccess",
                                "src": "1540:10:3"
                              }
                            ],
                            "id": 7561,
                            "name": "IndexAccess",
                            "src": "1524:27:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7538,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "sol"
                            },
                            "id": 7562,
                            "name": "Identifier",
                            "src": "1554:3:3"
                          }
                        ],
                        "id": 7563,
                        "name": "Assignment",
                        "src": "1524:33:3"
                      }
                    ],
                    "id": 7564,
                    "name": "ExpressionStatement",
                    "src": "1524:33:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7518,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7565,
                            "name": "Identifier",
                            "src": "1569:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_index",
                              "referencedDeclaration": 7501,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7538,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "sol"
                                },
                                "id": 7566,
                                "name": "Identifier",
                                "src": "1583:3:3"
                              }
                            ],
                            "id": 7567,
                            "name": "MemberAccess",
                            "src": "1583:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_address",
                              "referencedDeclaration": 7503,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7538,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "sol"
                                },
                                "id": 7568,
                                "name": "Identifier",
                                "src": "1595:3:3"
                              }
                            ],
                            "id": 7569,
                            "name": "MemberAccess",
                            "src": "1595:12:3"
                          }
                        ],
                        "id": 7570,
                        "name": "FunctionCall",
                        "src": "1569:39:3"
                      }
                    ],
                    "id": 7571,
                    "name": "EmitStatement",
                    "src": "1564:44:3"
                  }
                ],
                "id": 7572,
                "name": "Block",
                "src": "1348:264:3"
              }
            ],
            "id": 7573,
            "name": "FunctionDefinition",
            "src": "1297:315:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintTokens",
              "scope": 7632,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "Id",
                      "scope": 7631,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7574,
                        "name": "ElementaryTypeName",
                        "src": "1968:4:3"
                      }
                    ],
                    "id": 7575,
                    "name": "VariableDeclaration",
                    "src": "1968:7:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7631,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7576,
                            "name": "ElementaryTypeName",
                            "src": "1986:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7577,
                            "name": "Literal",
                            "src": "1991:1:3"
                          }
                        ],
                        "id": 7578,
                        "name": "ArrayTypeName",
                        "src": "1986:7:3"
                      }
                    ],
                    "id": 7579,
                    "name": "VariableDeclaration",
                    "src": "1986:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7631,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7580,
                                "name": "ElementaryTypeName",
                                "src": "2013:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7581,
                                "name": "Literal",
                                "src": "2018:1:3"
                              }
                            ],
                            "id": 7582,
                            "name": "ArrayTypeName",
                            "src": "2013:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7583,
                            "name": "Literal",
                            "src": "2021:1:3"
                          }
                        ],
                        "id": 7584,
                        "name": "ArrayTypeName",
                        "src": "2013:10:3"
                      }
                    ],
                    "id": 7585,
                    "name": "VariableDeclaration",
                    "src": "2013:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7631,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7586,
                            "name": "ElementaryTypeName",
                            "src": "2043:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7587,
                            "name": "Literal",
                            "src": "2048:1:3"
                          }
                        ],
                        "id": 7588,
                        "name": "ArrayTypeName",
                        "src": "2043:7:3"
                      }
                    ],
                    "id": 7589,
                    "name": "VariableDeclaration",
                    "src": "2043:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7631,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[1]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[1]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7590,
                            "name": "ElementaryTypeName",
                            "src": "2061:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 7591,
                            "name": "Literal",
                            "src": "2066:1:3"
                          }
                        ],
                        "id": 7592,
                        "name": "ArrayTypeName",
                        "src": "2061:7:3"
                      }
                    ],
                    "id": 7593,
                    "name": "VariableDeclaration",
                    "src": "2061:20:3"
                  }
                ],
                "id": 7594,
                "name": "ParameterList",
                "src": "1957:125:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 7631,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7595,
                        "name": "ElementaryTypeName",
                        "src": "2109:4:3"
                      }
                    ],
                    "id": 7596,
                    "name": "VariableDeclaration",
                    "src": "2109:11:3"
                  }
                ],
                "id": 7597,
                "name": "ParameterList",
                "src": "2108:13:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                                  "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10511,
                                10512
                              ],
                              "referencedDeclaration": 10512,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7598,
                            "name": "Identifier",
                            "src": "2130:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                                      "typeString": "uint256[1] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 10165,
                                  "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[1] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7512,
                                      "type": "contract Verifier",
                                      "value": "squareVerifier"
                                    },
                                    "id": 7599,
                                    "name": "Identifier",
                                    "src": "2138:14:3"
                                  }
                                ],
                                "id": 7600,
                                "name": "MemberAccess",
                                "src": "2138:23:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7579,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7601,
                                "name": "Identifier",
                                "src": "2162:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7585,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7602,
                                "name": "Identifier",
                                "src": "2165:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7589,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7603,
                                "name": "Identifier",
                                "src": "2168:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7593,
                                  "type": "uint256[1] memory",
                                  "value": "input"
                                },
                                "id": 7604,
                                "name": "Identifier",
                                "src": "2171:5:3"
                              }
                            ],
                            "id": 7605,
                            "name": "FunctionCall",
                            "src": "2138:39:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e6e6f74206d696e742061206e657720746f6b656e2d20566572696669636174696f6e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Cannot mint a new token- Verification failed\"",
                              "value": "Cannot mint a new token- Verification failed"
                            },
                            "id": 7606,
                            "name": "Literal",
                            "src": "2179:46:3"
                          }
                        ],
                        "id": 7607,
                        "name": "FunctionCall",
                        "src": "2130:96:3"
                      }
                    ],
                    "id": 7608,
                    "name": "ExpressionStatement",
                    "src": "2130:96:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7573,
                              "type": "function (uint256,address)",
                              "value": "addSolution"
                            },
                            "id": 7609,
                            "name": "Identifier",
                            "src": "2233:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7575,
                              "type": "uint256",
                              "value": "Id"
                            },
                            "id": 7610,
                            "name": "Identifier",
                            "src": "2245:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10508,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7611,
                                "name": "Identifier",
                                "src": "2249:3:3"
                              }
                            ],
                            "id": 7612,
                            "name": "MemberAccess",
                            "src": "2249:10:3"
                          }
                        ],
                        "id": 7613,
                        "name": "FunctionCall",
                        "src": "2233:27:3"
                      }
                    ],
                    "id": 7614,
                    "name": "ExpressionStatement",
                    "src": "2233:27:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7596,
                              "type": "bool",
                              "value": "result"
                            },
                            "id": 7615,
                            "name": "Identifier",
                            "src": "2267:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1163,
                                  "type": "function (address,uint256) returns (bool)",
                                  "value": "mint"
                                },
                                "id": 7616,
                                "name": "Identifier",
                                "src": "2276:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10508,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7617,
                                    "name": "Identifier",
                                    "src": "2281:3:3"
                                  }
                                ],
                                "id": 7618,
                                "name": "MemberAccess",
                                "src": "2281:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7575,
                                  "type": "uint256",
                                  "value": "Id"
                                },
                                "id": 7619,
                                "name": "Identifier",
                                "src": "2293:2:3"
                              }
                            ],
                            "id": 7620,
                            "name": "FunctionCall",
                            "src": "2276:20:3"
                          }
                        ],
                        "id": 7621,
                        "name": "Assignment",
                        "src": "2267:29:3"
                      }
                    ],
                    "id": 7622,
                    "name": "ExpressionStatement",
                    "src": "2267:29:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1ee69982baedabd0e879c55834b6adf43165ea6ec3a256e0e0adc1b550c626b1",
                                  "typeString": "literal_string \"Couldn't mint the token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10511,
                                10512
                              ],
                              "referencedDeclaration": 10512,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7623,
                            "name": "Identifier",
                            "src": "2303:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7596,
                                  "type": "bool",
                                  "value": "result"
                                },
                                "id": 7624,
                                "name": "Identifier",
                                "src": "2311:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7625,
                                "name": "Literal",
                                "src": "2321:4:3"
                              }
                            ],
                            "id": 7626,
                            "name": "BinaryOperation",
                            "src": "2311:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "436f756c646e2774206d696e742074686520746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Couldn't mint the token\"",
                              "value": "Couldn't mint the token"
                            },
                            "id": 7627,
                            "name": "Literal",
                            "src": "2327:25:3"
                          }
                        ],
                        "id": 7628,
                        "name": "FunctionCall",
                        "src": "2303:50:3"
                      }
                    ],
                    "id": 7629,
                    "name": "ExpressionStatement",
                    "src": "2303:50:3"
                  }
                ],
                "id": 7630,
                "name": "Block",
                "src": "2123:234:3"
              }
            ],
            "id": 7631,
            "name": "FunctionDefinition",
            "src": "1938:419:3"
          }
        ],
        "id": 7632,
        "name": "ContractDefinition",
        "src": "388:1974:3"
      }
    ],
    "id": 7633,
    "name": "SourceUnit",
    "src": "0:2833:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0x00e705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "uri",
              "type": "string"
            }
          ],
          "name": "NewTokenMinted",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "pauser",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "unpauser",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x48F1290EfF08e79f5Dc944F9a319a19D396358CB",
      "transactionHash": "0x6d7f5a41755d575c859f5a94ac4986d592671e803685909a7926b41fa917a45b"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2020-12-29T22:09:27.961Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner\r",
        "params": {
          "operator": "operator address which you want to query the approval of\r",
          "owner": "owner address which you want to query the approval of\r"
        },
        "return": "bool whether the given operator is approved by the given owner\r"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator\r An operator is allowed to transfer all tokens of the sender on their behalf\r",
        "params": {
          "approved": "representing the status of the approval to be set\r",
          "to": "operator address to set the approval\r"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table\r"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract\r Reverts if the index is greater or equal to the total number of tokens\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list\r"
        },
        "return": "uint256 token ID at the given index of the tokens list\r"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list\r",
          "owner": "address owning the tokens list to be accessed\r"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address\r"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract\r",
        "return": "uint256 representing the total amount of tokens\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}